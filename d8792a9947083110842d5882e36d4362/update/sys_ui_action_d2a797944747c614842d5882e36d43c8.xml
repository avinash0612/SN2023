<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>stocksdata</action_name>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition/>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>true</form_context_menu>
        <form_link>true</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style>primary</form_style>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>true</list_action>
        <list_banner_button>true</list_banner_button>
        <list_button>true</list_button>
        <list_choice>true</list_choice>
        <list_context_menu>true</list_context_menu>
        <list_link>true</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style>primary</list_style>
        <messages/>
        <name>GetStocksdata</name>
        <onclick/>
        <order>100</order>
        <script><![CDATA[// API endpoint 
var apiUrl = 'https://financialmodelingprep.com/api/v3/quote/';
var apiKey = '38a756289daffb0e571c309c71abfccd';
// Create REST message  
var restMessage = new sn_ws.RESTMessageV2();
// Set headers
restMessage.setRequestHeader('Content-Type', 'application/json');
// Loop through result set
while (current) {
    // Get stock name
    var ticker = current.ticker;
    // Call API  
    // Set endpoint and parameters
    restMessage.setEndpoint(apiUrl + ticker + "?apikey=" + apiKey);
    restMessage.setHttpMethod('GET');
    // Execute request
    var response = restMessage.execute();
    var responseBody = response.getBody();
    // gs.print(responseBody);
    // Parse and print price
    var stockData = JSON.parse(responseBody);
    var price = stockData[0].price;
    gs.info(ticker + ' price: ' + price);
    // Update price field
    current.price = price;
    // Update record
    current.update();
    // Next record
    current = current.next();
}]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>avi</sys_created_by>
        <sys_created_on>2024-06-23 17:58:37</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d2a797944747c614842d5882e36d43c8</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>GetStocksdata</sys_name>
        <sys_overrides/>
        <sys_package display_value="stocks" source="x_27034_stocks">d8792a9947083110842d5882e36d4362</sys_package>
        <sys_policy/>
        <sys_scope display_value="stocks">d8792a9947083110842d5882e36d4362</sys_scope>
        <sys_update_name>sys_ui_action_d2a797944747c614842d5882e36d43c8</sys_update_name>
        <sys_updated_by>avi</sys_updated_by>
        <sys_updated_on>2024-06-23 18:05:52</sys_updated_on>
        <table>x_27034_stocksvalu_valuation</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>true</ui16_compatible>
    </sys_ui_action>
</record_update>
